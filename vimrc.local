colorscheme railscasts
set background=light
set background=dark

:nnoremap <leader>w :w<Return>
:nnoremap <leader>wq :wq<Return>
:nnoremap <leader>e :Explore<Return>
:nnoremap <Leader>l :call RunAllSpecs()<CR>

set relativenumber
" let g:rspec_command = 'call Send_to_Tmux("rspec {spec}\n")'
let test#strategy = "tslime"
let g:test#preserve_screen = 1
nnoremap <Leader>a :TestSuite<CR>
nnoremap <Leader>t :TestFile<CR>
nnoremap <Leader>s :TestNearest<CR>
nnoremap <Leader>l :TestLast<CR>

nnoremap <Leader>b :call Send_to_Tmux("bundle install\n")<CR>
nnoremap <Leader>m :call Send_to_Tmux("migrate\n")<CR>
nnoremap <Leader>sv :AV<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>e :Explore<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>at :AT<CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gp :Git push<CR>
nnoremap <leader>to :tabonly<CR>
nnoremap <leader>wq :wq<CR>
nnoremap <leader>gri :Git rebase -i master<CR>
set clipboard=unnamed
let g:tslime_always_current_session = 1
set statusline=%{fugitive#statusline()}\ %f
let g:markdown_enable_mappings = 0
nnoremap <Leader>me :MarkdownEditBlock<CR>
vnoremap <Leader>me :MarkdownEditBlock<CR>
nnoremap <Leader>rc :ALEFix<CR>
augroup ft_rb
    au!
    " fix the SLOOOW syntax highlighting
    au FileType ruby setlocal re=1 foldmethod=manual
augroup END
set re=1
let g:ale_linter_aliases = {'vue': ['vue', 'javascript']}
let g:ale_linters = {'vue': ['eslint', 'vls']}
let g:ale_fixers = {
\   'ruby': ['rubocop'],
\   'elixir': ['mix_format'],
\   'javascript': ['eslint'],
\   'vue': ['eslint']
\}
